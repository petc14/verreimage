/**
 * =============================================
 * SCRIPT.MIN.JS - Verre & Image - 2025
 * - Logique pour le site principal (hors configurateur)
 * - Gère le menu mobile, la galerie lightbox et les animations au défilement.
 * =============================================
 */
document.addEventListener('DOMContentLoaded', function() {

    // --- Mobile Navigation Toggle ---
    const burgerMenu = document.querySelector('.burger-menu');
    const navLinks = document.querySelector('nav.main-nav ul');

    if (burgerMenu && navLinks) {
        burgerMenu.addEventListener('click', () => {
            navLinks.classList.toggle('active');
        });
    }

    // --- Lightbox for Gallery ---
    const galleryItems = document.querySelectorAll('.gallery-item');
    if (galleryItems.length > 0) {
        // Create the lightbox structure only once
        const lightbox = document.createElement('div');
        lightbox.classList.add('lightbox');
        document.body.appendChild(lightbox);

        const lightboxImage = document.createElement('img');
        lightbox.appendChild(lightboxImage);

        const closeButton = document.createElement('span');
        closeButton.classList.add('close-lightbox');
        closeButton.innerHTML = '&times;';
        lightbox.appendChild(closeButton);

        // Add event listeners to each gallery item
        galleryItems.forEach(item => {
            item.addEventListener('click', () => {
                const imgElement = item.querySelector('img');
                if (imgElement) {
                    lightbox.classList.add('active');
                    lightboxImage.src = imgElement.src;
                }
            });
        });

        // Function to close the lightbox
        const closeLightbox = () => {
            lightbox.classList.remove('active');
        };

        closeButton.addEventListener('click', closeLightbox);
        // Also close lightbox when clicking on the background
        lightbox.addEventListener('click', (e) => {
            if (e.target !== lightboxImage) {
                closeLightbox();
            }
        });
    }

    // --- Scroll Reveal Animation ---
    const revealElements = document.querySelectorAll('.reveal');
    const revealOnScroll = () => {
        const windowHeight = window.innerHeight;
        revealElements.forEach(el => {
            const elementTop = el.getBoundingClientRect().top;
            // Reveal element when it's 100px from the bottom of the viewport
            if (elementTop < windowHeight - 100) {
                el.classList.add('visible');
            }
        });
    };

    window.addEventListener('scroll', revealOnScroll);
    revealOnScroll(); // Initial check on page load

});